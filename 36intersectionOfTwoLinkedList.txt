/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution
{
public:
  ListNode *getIntersectionNode(ListNode *headA, ListNode *headB)
  {
    // int cnt1 = 0, cnt2 = 0;
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    ListNode *temp1 = headA, *temp2 = headB;
    while (temp1 != temp2)
    {
      temp1 = temp1 == NULL ? headB : temp1->next;
      temp2 = temp2 == NULL ? headA : temp2->next;
    }
    return temp1;
    // while (temp1) {
    //     cnt1++;
    //     temp1 = temp1->next;
    // }
    // while (temp2) {
    //     cnt2++;
    //     temp2 = temp2->next;
    // }
    // if (cnt1 < cnt2) {
    //     int diff = cnt2 - cnt1;
    //     while (diff--) {
    //         headB = headB->next;
    //     }
    // }
    // if (cnt2 < cnt1) {
    //     int diff = cnt1 - cnt2;
    //     while (diff--) {
    //         headA = headA->next;
    //     }
    // }
    // while (headA && headB) {
    //     if (headA == headB) {
    //         return headA;
    //     }
    //     headA = headA->next;
    //     headB = headB->next;
    // }
    // return NULL;
  }
};